// Copyright 2024 The Kubeflow Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// CheckpointPersistentVolumeConfigApplyConfiguration represents a declarative configuration of the CheckpointPersistentVolumeConfig type for use
// with apply.
type CheckpointPersistentVolumeConfigApplyConfiguration struct {
	ClaimName *string `json:"claimName,omitempty"`
	MountPath *string `json:"mountPath,omitempty"`
	SubPath   *string `json:"subPath,omitempty"`
}

// CheckpointPersistentVolumeConfigApplyConfiguration constructs a declarative configuration of the CheckpointPersistentVolumeConfig type for use with
// apply.
func CheckpointPersistentVolumeConfig() *CheckpointPersistentVolumeConfigApplyConfiguration {
	return &CheckpointPersistentVolumeConfigApplyConfiguration{}
}

// WithClaimName sets the ClaimName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClaimName field is set to the value of the last call.
func (b *CheckpointPersistentVolumeConfigApplyConfiguration) WithClaimName(value string) *CheckpointPersistentVolumeConfigApplyConfiguration {
	b.ClaimName = &value
	return b
}

// WithMountPath sets the MountPath field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MountPath field is set to the value of the last call.
func (b *CheckpointPersistentVolumeConfigApplyConfiguration) WithMountPath(value string) *CheckpointPersistentVolumeConfigApplyConfiguration {
	b.MountPath = &value
	return b
}

// WithSubPath sets the SubPath field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SubPath field is set to the value of the last call.
func (b *CheckpointPersistentVolumeConfigApplyConfiguration) WithSubPath(value string) *CheckpointPersistentVolumeConfigApplyConfiguration {
	b.SubPath = &value
	return b
}
